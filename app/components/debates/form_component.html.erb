<%= translatable_form_for(debate, html: { class: "debate-form" }) do |f| %>
  <!-- <%= render "shared/errors", resource: debate %> -->

  <fieldset class="required-fields">
    <!-- <legend class="custom-font-anakotmai"><%= t("shared.required") %></legend> -->

    <%= render "shared/globalize_locales", resource: debate %>

    <%= f.translatable_fields do |translations_form| %>
      <div>
        <%= translations_form.text_field :title,
              maxlength: Debate.title_max_length,
              data: suggest_data(debate) %>
      </div>
      <div class="js-suggest" data-locale="<%= translations_form.locale %>"></div>

      <div>
        <%= translations_form.text_area :description,
              maxlength: Debate.description_max_length,
              class: "html-area" %>
      </div>
    <% end %>
  </fieldset>

  <%= f.invisible_captcha :subtitle %>

  <fieldset>
    <!-- <legend><%= t("shared.optional") %></legend> -->

    <div>
      <!-- <%= f.text_field :tag_list, value: debate.tag_list.to_s,
              hint: t("debates.form.tags_instructions"),
              placeholder: t("debates.form.tags_placeholder"),
              data: { js_url: suggest_tags_path },
              class: "tag-autocomplete" %> -->

              <label for="select_mul"><%= t("activerecord.attributes.debate.category") %></label>
              <div class="multiSelect">
                <select id="select_mul" multiple class="multiSelect_field">
                  <option value="ผู้แทนฯ ที่คุณอยากเห็น
                  กระบวนการคัดเลือกว่าที่ผู้สมัคร/การอบรมและพัฒนา/ส.ส.เขต/ส.ส.บัญชีรายชื่อ">ผู้แทนฯ ที่คุณอยากเห็น
                  กระบวนการคัดเลือกว่าที่ผู้สมัคร/การอบรมและพัฒนา/ส.ส.เขต/ส.ส.บัญชีรายชื่อ</option>
                  <option value="อของพรรค
                  ช่องทางการสื่อสารต่างๆ ทั้ง Online Offline On Air/ Social Media พรรคและคนก้าวไกล /คอนเทนท์/ภาพ/วิดีโอ/ สื่อหาเสียง">อของพรรค
                  ช่องทางการสื่อสารต่างๆ ทั้ง Online Offline On Air/ Social Media พรรคและคนก้าวไกล /คอนเทนท์/ภาพ/วิดีโอ/ สื่อหาเสียง</option>
                  <option value="การรณรงค์สื่อสารนโยบาย 
                  การจัดทำนโยบาย/ช่องทางการเสนอนโยบาย/กลุ่มเป้าหมาย/การสื่อสารนโยบาย/การผลักดันนโยบาย">การรณรงค์สื่อสารนโยบาย 
                  การจัดทำนโยบาย/ช่องทางการเสนอนโยบาย/กลุ่มเป้าหมาย/การสื่อสารนโยบาย/การผลักดันนโยบาย</option>
                  <option value="งานสภา
                  ร่างกฎหมาย/การอภิปราย/กรรมาธิการ/ การทำงานกับพรรคร่วมฝ่ายค้าน">งานสภา
                  ร่างกฎหมาย/การอภิปราย/กรรมาธิการ/ การทำงานกับพรรคร่วมฝ่ายค้าน</option>
                  <option value="การทำงานพื้นที่ 
                  การเข้าถึงประชาชน/การแก้ปัญหาในพื้นที่/การทำงานกับหน่วยราชการและผู้นำชุมชน">การทำงานพื้นที่ 
                  การเข้าถึงประชาชน/การแก้ปัญหาในพื้นที่/การทำงานกับหน่วยราชการและผู้นำชุมชน</option>
                  <option value="การสร้างเครือข่ายและกิจกรรมสมาชิก
                  การแจ้งข่าวสาร/การมีส่วนร่วมของสมาชิกพรรค/การขยายฐานสมาชิก/แคมเปญการรับสมัครสมาชิก/วิธีการรับสมัครสมาชิก">การสร้างเครือข่ายและกิจกรรมสมาชิก
                  การแจ้งข่าวสาร/การมีส่วนร่วมของสมาชิกพรรค/การขยายฐานสมาชิก/แคมเปญการรับสมัครสมาชิก/วิธีการรับสมัครสมาชิก</option>
                  <option value="ระดมทุน 
                  ช่องทางรับบริจาค/วิธีการระดมทุน/แคมเปญการระดมทุน">ระดมทุน 
                  ช่องทางรับบริจาค/วิธีการระดมทุน/แคมเปญการระดมทุน</option>
                </select>
              </div>
              <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                <symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="iconX">
                  <g stroke-linecap="round" stroke-linejoin="round">
                      <line x1="18" y1="6" x2="6" y2="18"></line>
                      <line x1="6" y1="6" x2="18" y2="18"></line>
                  </g>
                </symbol>
              </svg>


      <%= f.text_field :tag_list, value: debate.tag_list.to_s,
        placeholder: t("debates.form.tags_placeholder"),
        data: { js_url: suggest_tags_path },
        class: "tag-autocomplete" %>
    </div>

    <%= render SDG::RelatedListSelectorComponent.new(f) %>
  </fieldset>

  <div class="actions">
    <% if debate.new_record? %>
      <div>
        <%= f.check_box :terms_of_service,
          title: t("form.accept_terms_title"),
          label: t("form.accept_terms",
                   policy: link_to(t("form.policy"), "/privacy", target: "blank"),
                   conditions: link_to(t("form.conditions"), "/conditions", target: "blank")
                  ) %>
      </div>
    <% end %>

    <%= f.submit(class: "button", value: t("debates.#{action_name}.form.submit_button")) %>
  </div>
<% end %>

<script>
$(document).ready(function () {
  $(function selectMult() {
    $(".multiSelect").each(function (e) {
      var self = $(this);
      var field = self.find(".multiSelect_field");
      var fieldOption = field.find("option");
      var placeholder = field.attr("data-placeholder");

      field.hide().after(`<div class="multiSelect_dropdown"></div>
                                <ul class="multiSelect_list"></ul>
                                <span class="multiSelect_arrow"></span>`);

      fieldOption.each(function (e) {
        $(".multiSelect_list").append(
          `<li id="${$(this)
            .text()
            .toLowerCase()}" class="multiSelect_option" data-value="` +
            $(this).val() +
            `">
                  <a class="multiSelect_text">` +
            $(this).text() +
            `</a>
              </li>`
        );
      });

      var dropdown = self.find(".multiSelect_dropdown");
      var list = self.find(".multiSelect_list");
      var option = self.find(".multiSelect_option");
      var optionText = self.find(".multiSelect_text");

      dropdown.attr("data-multiple", "true");
      list.css("top", dropdown.height() + 5);

      option.click(function (e) {
        var self = $(this);
        e.stopPropagation();
        self.addClass("-selected");
        field
          .find("option:contains(" + self.children().text() + ")")
          .prop("selected", true);
        xxxx = dropdown;
        if (dropdown.children()) {
        }
        dropdown
          .append(function (e) {
            return $(
              '<span class="multiSelect_choice">' +
                self.children().text() +
                '<svg class="multiSelect_deselect -iconX"><use href="#iconX"></use></svg></span>'
            ).click(function (e) {
              var self = $(this);
              e.stopPropagation();
              self.remove();
              list
                .find(".multiSelect_option:contains(" + self.text() + ")")
                .removeClass("-selected");
              list
                .css("top", dropdown.height() + 5)
                .find(".multiSelect_noselections")
                .remove();
              field
                .find("option:contains(" + self.text() + ")")
                .prop("selected", false);
              if (dropdown.children(":visible").length === 0) {
                dropdown.removeClass("-hasValue");
              }
            });
          })
          .addClass("-hasValue");
        list.css("top", dropdown.height() + 5);
        if (!option.not(".-selected").length) {
          list.append(
            '<h5 class="multiSelect_noselections">ไม่มีการเลือก</h5>'
          );
        }
      });

      dropdown.click(function (e) {
        e.stopPropagation();
        e.preventDefault();
        dropdown.toggleClass("-open");
        list
          .toggleClass("-open")
          .scrollTop(0)
          .css("top", dropdown.height() + 5);
      });

      $(document).on("click touch", function (e) {
        if (dropdown.hasClass("-open")) {
          dropdown.toggleClass("-open");
          list.removeClass("-open");
        }
      });
    });
  });

  //function setData() {
  //  var contents = $('#debate_tag_list').value += ;
  //}
});
</script>